server {
  server_name _;
  return 302 $scheme://example.com$request_uri;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  root /var/www/html/web;
  rewrite_log off;
  index index.php;

  server_name _;

  # The following three lines should be uncommented in a live env
  # (and the subsequent sendfile off directive should be commented).
  # This is to negate a weird bug in Virtualbox.
  # sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  sendfile off;
  keepalive_timeout 10s;
  types_hash_max_size 2048;
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  client_max_body_size 100M;

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 9;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  # Add trailing slash to */wp-admin requests.
  rewrite /wp-admin$ $scheme://$host$uri/ permanent;

  # PHP-FPM 7.1
  location ~ \.(hh|php)$ {
    proxy_intercept_errors on;

    try_files $uri /index.php;

    # if our request is routed via hhvm, then use the fastcgi cache
    fastcgi_pass_header Set-Cookie;
    fastcgi_pass_header Cookie;
    fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_split_path_info ^(.+.php)(/.+)$;
    fastcgi_param  PATH_INFO $fastcgi_path_info;
    fastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_path_info;
    fastcgi_intercept_errors on;
    include fastcgi_params;
    fastcgi_no_cache $no_cache;
    fastcgi_cache_bypass $no_cache;
    fastcgi_cache drm_custom_cache;
    fastcgi_cache_key $server_name|$request_uri;
    fastcgi_cache_valid 404 60m;
    fastcgi_cache_valid 200 60m;
    fastcgi_max_temp_file_size 4m;
    fastcgi_cache_use_stale updating;

    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    include fastcgi_params;
    fastcgi_pass unix:/var/run/php7.1-fpm.sock;
  }

  # Directives to send expires headers and turn off 404 error logging.
  location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
    access_log off;
    log_not_found off;
    add_header Pragma public;
    add_header Cache-Control "public";
    expires 14d;
  }

  # Deny all attempts to access hidden files such as .htaccess, .htpasswd, .DS_Store (Mac).
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~ /\. {
    deny all;
  }

  # Deny access to any files with a .php extension in the uploads directory
  # Works in sub-directory installs and also in multisite network
  # Keep logging the requests to parse later (or to pass to firewall utilities such as fail2ban)
  location ~* /(?:uploads|files)/.*\.php$ {
    deny all;
  }

  # define what we shouldn't normally cache
  set $no_cache "";

  if ($request_method = POST)
  {
    set $no_cache 1;
  }

  if ($request_uri ~* "/(wp-admin/|wp-login.php)")
  {
    set $no_cache 1;
  }

  if ($http_cookie ~* "wordpress_logged_in_")
  {
    set $no_cache 1;
  }

  location = /favicon.ico {
    log_not_found off;
    access_log off;
  }

  location = /robots.txt {
    allow all;
    log_not_found off;
    access_log off;
  }

  # avoid a bit of information disclosure
  server_tokens off;
  server_name_in_redirect off;
}
